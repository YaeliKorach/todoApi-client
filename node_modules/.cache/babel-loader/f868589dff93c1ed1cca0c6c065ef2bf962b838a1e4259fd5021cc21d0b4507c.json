{"ast":null,"code":"import axios from 'axios';\nconst apiUrl = \"http://localhost:5058\";\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`);\n    console.log(result);\n    return result.data;\n  },\n  addTask: async name => {\n    const newItem = {\n      name: name,\n      isComplete: false\n    };\n    const result = await axios.post(`${apiUrl}/items`, newItem).then(response => {\n      console.log('Response from server:', response.data);\n    }).catch(error => {\n      console.error('Error:', error.response.data);\n    });\n    return result;\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    //TODO\n    return {};\n  },\n  deleteTask: async id => {\n    const itemIdToDelete = id;\n    axios.delete(`${apiUrl}/item/${itemIdToDelete}`).then(response => {\n      // Handle success, e.g., log the response or perform further actions\n      console.log('Response from server:', response.data);\n    }).catch(error => {\n      // Handle error, e.g., log the error or show an error message to the user\n      console.error('Error:', error.response.data);\n    });\n  }\n};","map":{"version":3,"names":["axios","apiUrl","getTasks","result","get","console","log","data","addTask","name","newItem","isComplete","post","then","response","catch","error","setCompleted","id","deleteTask","itemIdToDelete","delete"],"sources":["C:/Users/משתמש זה/3D Objects/prakticode/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiUrl = \"http://localhost:5058\";\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`) ;\n    console.log(result);   \n    return result.data;\n  },\n\n  addTask: async(name)=>{\n    const newItem = {\n      name: name,\n      isComplete: false,  \n    };\n    \n    const result=await axios.post(`${apiUrl}/items`, newItem)\n      .then(response => {\n        console.log('Response from server:', response.data);\n      })\n      .catch(error => {        \n        console.error('Error:', error.response.data);\n      });\n    return result;\n  },\n\n  setCompleted: async(id, isComplete)=>{\n\n    console.log('setCompleted', {id, isComplete})\n    //TODO\n    return {};\n  },\n\n  deleteTask:async(id)=>{\n    const itemIdToDelete = id; \naxios.delete(`${apiUrl}/item/${itemIdToDelete}`)\n  .then(response => {\n    // Handle success, e.g., log the response or perform further actions\n    console.log('Response from server:', response.data);\n  })\n  .catch(error => {\n    // Handle error, e.g., log the error or show an error message to the user\n    console.error('Error:', error.response.data);\n  });\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,uBAAuB;AAEtC,eAAe;EACbC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,MAAO,QAAO,CAAC;IACjDI,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnB,OAAOA,MAAM,CAACI,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAMC,IAAI,IAAG;IACpB,MAAMC,OAAO,GAAG;MACdD,IAAI,EAAEA,IAAI;MACVE,UAAU,EAAE;IACd,CAAC;IAED,MAAMR,MAAM,GAAC,MAAMH,KAAK,CAACY,IAAI,CAAE,GAAEX,MAAO,QAAO,EAAES,OAAO,CAAC,CACtDG,IAAI,CAACC,QAAQ,IAAI;MAChBT,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEQ,QAAQ,CAACP,IAAI,CAAC;IACrD,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAI;MACdX,OAAO,CAACW,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACF,QAAQ,CAACP,IAAI,CAAC;IAC9C,CAAC,CAAC;IACJ,OAAOJ,MAAM;EACf,CAAC;EAEDc,YAAY,EAAE,MAAAA,CAAMC,EAAE,EAAEP,UAAU,KAAG;IAEnCN,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAACY,EAAE;MAAEP;IAAU,CAAC,CAAC;IAC7C;IACA,OAAO,CAAC,CAAC;EACX,CAAC;EAEDQ,UAAU,EAAC,MAAMD,EAAE,IAAG;IACpB,MAAME,cAAc,GAAGF,EAAE;IAC7BlB,KAAK,CAACqB,MAAM,CAAE,GAAEpB,MAAO,SAAQmB,cAAe,EAAC,CAAC,CAC7CP,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAT,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEQ,QAAQ,CAACP,IAAI,CAAC;IACrD,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAI;MACd;MACAX,OAAO,CAACW,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACF,QAAQ,CAACP,IAAI,CAAC;IAC9C,CAAC,CAAC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}